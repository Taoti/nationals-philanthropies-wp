/*
 * Load this file in the main critical scss file.
 * It should contain the styles necessary for the navigation to look good on page load.
 */


.navContainer {
  width: 100%;
  padding-left: 2rem;
}

  // Set the visibility of "navContainer-mobile" and "navContainer-main-navigation" as criticial styles. This way it's hidden on page load (for mobile). The mobile styles can be noncritical since they'll be hidden until the user opens the menu, not necessary to have them on page load.
  .navContainer-mobile {
    display: none;

    @media screen and ( max-width: $nav-breakpoint-collapse ) {
      display: block;
    }

  }

  .navContainer-main-navigation {
    display: block;

    @media screen and ( max-width: $nav-breakpoint-collapse ) {
      background-color: $color-2;
      // height: calc(100vh - 100% - 5.9rem); // The screen height, minus the height of the header, minus the margin-top on the header = the available screen space below the header.
      left: 0;
      opacity: 0;
      padding: 0;
      pointer-events: none;
      position: absolute;
      top: 100%;
      transform: translate3d(0, calc(-100vh - var(--header-height)), 0);
      width: 100vw;

      &.is-open {
        opacity: 1;
        pointer-events: all;
        transform: translate3d(0, 0, 0);
        transition: transform 400ms ease-in, opacity 400ms;
      }

    }

  }



.menu {
  display: flex;
  height: 100%;
  justify-content: flex-end;
  width: inherit;
}

  .menu-mainMenu {

    @media screen and (max-width: $nav-breakpoint-collapse) {
      flex-direction: column;
      justify-content: flex-start;
    }

  }

.menu-link {
  color: $invert;
  display: block;
  font-family: $sans-2;
  font-size: 1.6rem;
  font-weight: bold;
  letter-spacing: .1em;
  padding-left: 1.6rem;
  padding-right: 1.6rem;
  padding-top: 4.8rem;
  padding-bottom: 4.2rem;
  position: relative;
  text-transform: uppercase;
  transition: background-color 150ms;

  display: flex;
  flex-direction: column;
  justify-content: center;
  height: 100%;

  appearance: none;
  background-color: transparent;
  border: none;
  border-radius: 0;
  cursor: pointer;

  &:hover {
    color: $invert;
    // background-color: $color-9;
    text-decoration: none;
  }

  @media screen and (max-width: 1280px) {
    padding-top: 3rem;
    padding-bottom: 3.5rem;
  }

}


// The last link in the main menu is supposed to look like a giant red button that extends off the screen. The ::before and ::after elements are used to extend the background-color of the button.
.menu-item:last-child {
  padding-left: 5.8rem;

  @media screen and (max-width: 1280px) {
    padding-left: 1rem;
  }

  @media screen and (max-width: $nav-breakpoint-collapse) {
    padding-left: 0;
  }

  .menu-link {
    background-color: $link;
    border-left: none;
    padding-left: 4.5rem;
    padding-right: 10.5rem;

    @media screen and (max-width: 1280px) {
      // padding-right: 4.5rem;
      padding-left: 3rem;
      padding-right: 0;
    }

    &::before {
      background-color: $link;
      border-left: none;
      bottom: 100%;
      content: '';
      display: block;
      height: calc(var(--header-height) - 100% - 11px); // The height of the header, minus the height of this .menu-link (100%), minus the height of the blue/white/red border on #header::before (11px).
      left: 0;
      opacity: 1;
      position: absolute;
      top: auto;
      transition: background-color 150ms;
      width: calc((100vw - (#{$design-width} - #{$container-padding} - #{$container-padding})) / 2 + 100%);

      @media screen and (max-width: $design-width) {
        width: calc(100% + #{$container-padding});
      }

      @media screen and (max-width: 760px) {
        display: none;
      }

    }

    &::after {
      background-color: $link;
      bottom: 0;
      content: '';
      display: block;
      height: 100%;
      left: 100%;
      opacity: 1;
      position: absolute;
      top: auto;
      transition: background-color 150ms;
      width: calc( (100vw - (#{$design-width} - #{$container-padding} - #{$container-padding}) ) / 2 );//100%;

      @media screen and ( max-width: $design-width ) {
        width: $container-padding;
      }
    }

    &:hover {
      background-color: $hover;

      &::before,
      &::after {
        background-color: $hover;
      }
    }

  }

}


.menu-link-mainMenu {

  // Faux underline for the links
  &::before {
    background-color: $invert;
    content: '';
    display: block;
    position: absolute;
    opacity: 0;
    transition: opacity 150ms, transform 150ms ease-in-out;
    top: calc(50% + 1.4em); // The extra 1.4em will push it past the line-height of the text, but it should work if the text goes to two lines as well.
    left: 1.6rem; // offset by the left padding
    height: 2px;
    width: calc(100% - 3.2rem); // Subtract the left/right padding so the underline is the same width as the text.

    @media screen and ( max-width: $nav-breakpoint-collapse ) {
      top: calc(50% + .8em);
      width: calc(100% - 7.6rem);
      left: 3.8rem;
    }
  }

  &:hover {

    &::before {
      opacity: 1;
    }
  }
}

.menu-icon {
  display: block;
  height: 1rem;
  width: 1.7rem;

  position: absolute;
  top: calc(50% + 1em);

  svg {
    display: block;
  }
}

.menu-item {
  // position: relative;

  // @media screen and (max-width: 560px) {
  //   position: static;
  // }

}

// Items in the main menu
.menu-item-mainMenu:last-child {

  .menu-icon {
    top: calc(50% + 1em);
  }

}

// Items in the mobile menu. Assume these won't be visibile until screen width of $nav-breakpoint-collapse.
.menu-link-mobileMenu {
  padding-left: 2rem;
  padding-right: 6rem;

  @media screen and ( max-width: 568px ) {
    font-size: 1.4rem;
  }

  @media screen and ( max-width: 400px ) {
    padding-right: 3rem;
  }

}

.menu-item-mobileMenu {
  @media screen and ( max-width: $nav-breakpoint-collapse ) {
    position: relative;
  }
}

.menu-item-mobileMenu:last-child {

  .menu-link-mobileMenu {
    padding-right: 3rem;
  }

}



// Sub Menus / subnav
.subMenu {
  // display: none;
}



// Modals within the nav items
.menu-modal {
  box-shadow: 0px 0px 9px 4px rgba(0, 0, 0, 0.4);
  opacity: 0;
  pointer-events: none;
  position: absolute;
  right: 0;
  top: calc(-1 * (var(--header-height) - 100% - 14px)); //0;
  transform: translate3d(0, -3rem, 0) scale3d(0.8, 0.8, 0.8);
  transform-origin: right top;
  transition: opacity 133ms, transform 200ms;
  width: 200%;
  z-index: 2;

  &.is-active {
    pointer-events: auto;
    opacity: 1;
    transform: translate3d(0, 0, 0) scale3d(1, 1, 1);
  }

  @media screen and (max-width: 840px) {
    width: 150%;
    left: 0;
    min-width: 320px;
  }

  @media screen and (max-width: 560px) {
    transform-origin: center top;
    width: 100vw;
  }

}

// NOTE - more modal styles in the _navigation-noncritical.scss



// Mobile Nav, when the "Menu" or "Close" button are visible (plus the donate button).
.menu-link-mobileMenu-open {
  display: flex;
}
.menu-link-mobileMenu-close {
  display: flex;
  position: absolute;
  top: 0;
  right: 100%;
  opacity: 0;
  transform: translate3d(0, -20px, 0);
  // transition: opacity 100ms linear, transform 100ms linear;
  pointer-events: none;

  @media screen and ( max-width: 400px ) {
    left: 0;
    right: auto;
  }

  .menu-icon {
    font-weight: 100;
    font-size: 3rem;
    bottom: .5em;
    top: auto;
    font-family: sans-serif;
    line-height: 0;
  }

}

html.nav-is-open {
  .menu-link-mobileMenu-open {
    display: none;
  }
  .menu-link-mobileMenu-close {
    // display: flex;
    opacity: 1;
    transform: translate3d(0, 0, 0);
    transition: opacity 150ms linear 400ms, transform 150ms linear 400ms;
    pointer-events: all;
  }
}
