.homeQuote {
  padding: 22.5rem 0;
  position: relative;
  z-index: 0;

	&::before {
		@include page-tear-leather();
	}

  .home-content-row {
    justify-content: space-between;
  }

  .contentGroup {
    max-width: 410px;

    @media screen and ( max-width: $breakpoint-homePageModules-wrap ) {
      max-width: 100%;
    }
  }
}

.homeQuote-inner {
  @include l-container('content-2');
  align-items: flex-start;
  display: flex;
  justify-content: space-between;

  @media screen and ( max-width: 1575px ) {
    @include l-container('header');
  }

  @media screen and ( max-width: $breakpoint-homePageModules-wrap ) {
    flex-wrap: wrap;
  }

  .contentGroup-heading {
    @media screen and ( max-width: 1700px ) {
      font-size: 5rem;
    }
  }

}

.homeQuote-contentGroup {
  flex-basis: 32%;
  margin-right: 4rem;
  position: relative;
  top: -3.5rem; // This is meant to push the image's top edge to be aligned with the top of the quotes (icon). The quotes are tough to align since they're not a solid object.

  @media screen and ( max-width: $breakpoint-homePageModules-wrap ) {
    flex-basis: 100%;
    margin-right: 0;
  }

  @media screen and ( max-width: 1250px ) {
    margin-bottom: 6rem;
    top: 0;
  }
}

.homeQuote-body {
  display: flex;
  justify-content: flex-end;
  flex-basis: 68%;

  @media screen and ( max-width: 1700px ) {
    display: block;
    flex-basis: 45%;
  }

  @media screen and ( max-width: $breakpoint-homePageModules-wrap ) {
    flex-basis: 100%;
  }

  @media screen and ( max-width: 500px ) {
    display: block;
  }
}



.homeQuote-imageContainer {
  flex-basis: 155px;
  flex-shrink: 0;
  margin-right: 3rem;
  position: relative;
  top: -5rem; // This is meant to push the image's top edge to be aligned with the top of the quotes (icon). The quotes are tough to align since they're not a solid object.

  @media screen and ( max-width: 1250px ) {
    margin-bottom: 4rem;
    top: 0;
  }

  @media screen and ( max-width: 500px ) {
    margin-bottom: 7rem;
    margin-right: 0;
  }

  &::before,
	&::after {
		border: 1px solid transparentize($color-7, 0.8);
		content: '';
		display: block;
		left: 50%;
		position: absolute;
		transform-origin: center;
		transform: translate(-50%, 0) rotate(45deg);
		z-index: 1;
    height: 110px;
    top: 2.2rem;
    width: 110px;

    @media screen and ( max-width: 1250px ) {
      transform: translate(0,0) rotate(45deg);
    }

    @media screen and ( max-width: 500px ) {
      transform: translate(-50%, 0) rotate(45deg);
    }
	}

	&::before {
		left: calc(50% - 1rem);

    @media screen and ( max-width: 1700px ) {
      left: 1.5rem;
      transform: rotate(45deg);
    }

    @media screen and ( max-width: 1250px ) {
      left: 1rem;
    }

    @media screen and ( max-width: 500px ) {
      left: calc(50% - 1rem);
      transform: translate(-50%, 0) rotate(45deg);
    }
	}

	&::after {
		left: calc(50% + 1rem);

    @media screen and ( max-width: 1700px ) {
      left: 3.4rem;
      transform: rotate(45deg);
    }

    @media screen and ( max-width: 1250px ) {
      left: 3rem;
    }

    @media screen and ( max-width: 500px ) {
      left: calc(50% + 1rem);
      transform: translate(-50%, 0) rotate(45deg);
    }
  }

}

.homeQuote-image {
  clip-path: polygon(50% 0%, 100% 50%, 50% 100%, 0% 50%);
	display: block;
	max-width: 155px;
	height: auto;
  width: 100%;
  position: relative;
  z-index: 1;

  @media screen and ( max-width: 500px ) {
    margin-left: auto;
    margin-right: auto;
  }
}



.homeQuote-quote {
  flex-basis: calc(100% - 155px - 3rem);
  max-width: 560px;

  @media screen and ( max-width: $breakpoint-homePageModules-wrap ) {
    flex-basis: 100%;
    max-width: 100%;
    margin-top: 2rem;
  }

  @media screen and ( max-width: $breakpoint-contentGroup-mobile ) {
    text-align: center;
  }
}

.homeQuote-icon {
  @include quote-icon();
  color: $color-3;
}

.homeQuote-quoteText {
  @include quoted-text()
  color: $color-7;
}

.homeQuote-author {
  @include quote-attribution-name()
  color: $color-3;
}

.homeQuote-location {
  @include quote-attribution-description()
  color: $color-21;
}
